{"version":3,"sources":["modules/actions.js","modules/constant.js","components/Search.js","components/UserItem.js","components/Users.js","components/Modal.js","components/index.js","App.js","serviceWorker.js","modules/userReducer.js","modules/rootReducer.js","index.js"],"names":["actEditUser","user","type","payload","Search","handleOnchangeSearch","e","props","handleSearch","target","value","className","onChange","this","Component","connect","dispatch","keyword","actSearchUser","UserItem","handleDelete","handleEdit","name","username","email","phoneNumber","data-toggle","data-target","onClick","actDeleteUser","Users","renderTable","userList","filter","item","toLowerCase","indexOf","map","key","id","state","userReducer","Modal","handleOnChange","setState","handleOnSubmit","preventDefault","handleSubmitUser","nextProps","userEdit","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","onSubmit","actSubmitUser","Home","handleAddUser","App","Boolean","window","location","hostname","match","initialState","actions","console","log","index","findIndex","updateList","newUser","Math","random","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a528e216.chunk.js","sourcesContent":["import { DELETE_USER, SUBMIT_USER, EDIT_USER, SEARCH_USER } from \"./constant\";\r\n\r\nexport const actDeleteUser = (user) => {\r\n  return {\r\n    type: DELETE_USER,\r\n    payload: user,\r\n  };\r\n};\r\nexport const actSubmitUser = (user) => {\r\n  return {\r\n    type: SUBMIT_USER,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const actEditUser = (user) => {\r\n  return {\r\n    type: EDIT_USER,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const actSearchUser = (keyword) => {\r\n  return {\r\n    type: SEARCH_USER,\r\n    payload: keyword,\r\n  };\r\n};\r\n","export const DELETE_USER = \"DELETE_USER\";\r\nexport const SUBMIT_USER = \"SUBMIT_USER\";\r\nexport const EDIT_USER = \"EDIT_USER\";\r\nexport const SEARCH_USER = \"SEARCH_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actSearchUser } from \"../modules/actions\";\r\n\r\nclass Search extends Component {\r\n  handleOnchangeSearch = (e) => {\r\n    this.props.handleSearch(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control mb-3 w-50\"\r\n        onChange={this.handleOnchangeSearch}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleSearch: (keyword) => {\r\n      dispatch(actSearchUser(keyword));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Search);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actDeleteUser, actEditUser } from \"../modules/actions\";\r\n\r\nclass UserItem extends Component {\r\n  render() {\r\n    const { user, handleDelete, handleEdit } = this.props;\r\n    return (\r\n      <tr>\r\n        <td>{user.name}</td>\r\n        <td>{user.username}</td>\r\n        <td>{user.email}</td>\r\n        <td>{user.phoneNumber}</td>\r\n        <td>{user.type}</td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-info mr-2\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#modelIdUser\"\r\n            onClick={() => {\r\n              handleEdit(user);\r\n            }}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              handleDelete(user);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleDelete: (user) => {\r\n      dispatch(actDeleteUser(user));\r\n    },\r\n    handleEdit: (user) => {\r\n      dispatch(actEditUser(user));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(UserItem);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UserItem from \"./UserItem\";\r\n\r\nclass Users extends Component {\r\n  renderTable = () => {\r\n    let { keyword, userList } = this.props;\r\n    if (keyword !== \"\") {\r\n      userList = userList.filter((item) => {\r\n        return item.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\r\n      });\r\n    }\r\n    return userList.map((item) => {\r\n      return <UserItem key={item.id} user={item} />;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Username</th>\r\n              <th>Email</th>\r\n              <th>Phone Number</th>\r\n              <th>Type</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.renderTable()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userList: state.userReducer.userList,\r\n    keyword: state.userReducer.keyword,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Users);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actSubmitUser } from \"../modules/actions\";\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      username: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      phoneNumber: \"\",\r\n      type: \"USER\",\r\n    };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps && nextProps.userEdit) {\r\n      this.setState({\r\n        id: nextProps.userEdit.id,\r\n        username: nextProps.userEdit.username,\r\n        name: nextProps.userEdit.name,\r\n        email: nextProps.userEdit.email,\r\n        phoneNumber: nextProps.userEdit.phoneNumber,\r\n        type: nextProps.userEdit.type,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        id: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phoneNumber: \"\",\r\n        type: \"USER\",\r\n      });\r\n    }\r\n  }\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.handleSubmitUser(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"modelIdUser\"\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"modelTitleId\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">\r\n                {this.props.userEdit === null ? \"ADD USER\" : \"EDIT USER\"}\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">×</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleOnSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    onChange={this.handleOnChange}\r\n                    value={this.state.username}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    onChange={this.handleOnChange}\r\n                    value={this.state.name}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    onChange={this.handleOnChange}\r\n                    value={this.state.email}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Phone Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"phoneNumber\"\r\n                    onChange={this.handleOnChange}\r\n                    value={this.state.phoneNumber}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Type</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"type\"\r\n                    onChange={this.handleOnChange}\r\n                    value={this.state.type}\r\n                  >\r\n                    <option>USER</option>\r\n                    <option>VIP</option>\r\n                  </select>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleSubmitUser: (user) => {\r\n      dispatch(actSubmitUser(user));\r\n    },\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userEdit: state.userReducer.userEdit,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport Users from \"./Users\";\r\nimport Modal from \"./Modal\";\r\nimport { actEditUser } from \"../modules/actions\";\r\nimport { connect } from \"react-redux\";\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4 text-center my-3\">User Management</h1>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <Search />\r\n          <button\r\n            className=\"btn btn-success\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#modelIdUser\"\r\n            onClick={() => {\r\n              this.props.handleAddUser();\r\n            }}\r\n          >\r\n            Add User\r\n          </button>\r\n        </div>\r\n        <Users />\r\n        <Modal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleAddUser: () => {\r\n      dispatch(actEditUser(null));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Home);\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Home from \"./components\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { DELETE_USER, EDIT_USER, SEARCH_USER, SUBMIT_USER } from \"./constant\";\r\n\r\nconst initialState = {\r\n  userList: [\r\n    {\r\n      id: 1,\r\n      name: \"Dinh Phuc Nguyen\",\r\n      username: \"dpnguyen\",\r\n      email: \"dpnguyen@gmail.com\",\r\n      phoneNumber: \"1123123213\",\r\n      type: \"VIP\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"hao\",\r\n      username: \"nguyendp\",\r\n      email: \"nguyendp@gmail.com\",\r\n      phoneNumber: \"1123123213\",\r\n      type: \"VIP\",\r\n    },\r\n  ],\r\n  userEdit: null,\r\n  keyword: \"\",\r\n};\r\n\r\nconst userReducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case DELETE_USER: {\r\n      let userList = state.userList.filter((item) => {\r\n        return item.id !== actions.payload.id;\r\n      });\r\n      state.userList = userList;\r\n      return { ...state };\r\n    }\r\n    case SUBMIT_USER: {\r\n      console.log(actions.payload.id);\r\n      const index = state.userList.findIndex((item) => {\r\n        console.log(item.id);\r\n        return item.id === actions.payload.id;\r\n      });\r\n      console.log(index);\r\n\r\n      if (index !== -1) {\r\n        let updateList = [...state.userList];\r\n        updateList[index] = actions.payload;\r\n        state.userList = updateList;\r\n      } else {\r\n        let newUser = { ...actions.payload, id: Math.random() };\r\n        let userList = [...state.userList, newUser];\r\n        state.userList = userList;\r\n      }\r\n      return { ...state };\r\n    }\r\n    case EDIT_USER: {\r\n      state.userEdit = actions.payload;\r\n      return { ...state };\r\n    }\r\n    case SEARCH_USER: {\r\n      state.keyword = actions.payload;\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./../node_modules/jquery/dist/jquery.min\";\r\nimport \"./../node_modules/bootstrap/dist/js/bootstrap.min\";\r\nimport \"./../node_modules/popper.js/dist/umd/popper.min\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./modules/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}